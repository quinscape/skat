/*
 * This file is generated by jOOQ.
*/
package de.quinscape.domainql.skat.domain.tables;


import de.quinscape.domainql.skat.domain.Indexes;
import de.quinscape.domainql.skat.domain.Keys;
import de.quinscape.domainql.skat.domain.Public;
import de.quinscape.domainql.skat.domain.tables.records.UserConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserConfig extends TableImpl<UserConfigRecord> {

    private static final long serialVersionUID = -274260338;

    /**
     * The reference instance of <code>public.user_config</code>
     */
    public static final UserConfig USER_CONFIG = new UserConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserConfigRecord> getRecordType() {
        return UserConfigRecord.class;
    }

    /**
     * The column <code>public.user_config.id</code>.
     */
    public final TableField<UserConfigRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.user_config.user_id</code>.
     */
    public final TableField<UserConfigRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.user_config.lock_bidding</code>.
     */
    public final TableField<UserConfigRecord, Boolean> LOCK_BIDDING = createField("lock_bidding", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.user_config</code> table reference
     */
    public UserConfig() {
        this(DSL.name("user_config"), null);
    }

    /**
     * Create an aliased <code>public.user_config</code> table reference
     */
    public UserConfig(String alias) {
        this(DSL.name(alias), USER_CONFIG);
    }

    /**
     * Create an aliased <code>public.user_config</code> table reference
     */
    public UserConfig(Name alias) {
        this(alias, USER_CONFIG);
    }

    private UserConfig(Name alias, Table<UserConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserConfig(Name alias, Table<UserConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FKI_CONFIG_USER_USER, Indexes.PK_USER_CONFIG, Indexes.UC_USER_CONFIG_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserConfigRecord> getPrimaryKey() {
        return Keys.PK_USER_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<UserConfigRecord>>asList(Keys.PK_USER_CONFIG, Keys.UC_USER_CONFIG_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserConfigRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserConfigRecord, ?>>asList(Keys.USER_CONFIG__FK_USER_CONFIG_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserConfig as(String alias) {
        return new UserConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserConfig as(Name alias) {
        return new UserConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserConfig rename(String name) {
        return new UserConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserConfig rename(Name name) {
        return new UserConfig(name, null);
    }
}
